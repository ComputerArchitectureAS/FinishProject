


ARM Macro Assembler    Page 1 


    1 00000000         ; UARTIntTestMain.s
    2 00000000         ; Runs on LM4F120/TM4C123
    3 00000000         ; Tests the UART0 to implement bidirectional data transf
                       er to and from a
    4 00000000         ; computer running PuTTY.  This time, interrupts and FIF
                       Os
    5 00000000         ; are used.
    6 00000000         ; This file is named "UART2" because it is the second UA
                       RT example.
    7 00000000         ; It is not related to the UART2 module on the microcont
                       roller.
    8 00000000         ; Daniel Valvano
    9 00000000         ; September 12, 2013
   10 00000000         
   11 00000000         ;  This example accompanies the book
   12 00000000         ;  "Embedded Systems: Real Time Interfacing to Arm Corte
                       x M Microcontrollers",
   13 00000000         ;  ISBN: 978-1463590154, Jonathan Valvano, copyright (c)
                        2015
   14 00000000         ;  Program 5.11 Section 5.6, Program 3.10
   15 00000000         ;
   16 00000000         ;Copyright 2015 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   17 00000000         ;   You may use, edit, run or distribute this file
   18 00000000         ;   as long as the above copyright notice remains
   19 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   20 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   21 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   22 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   23 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   24 00000000         ;For more information about my classes, my research, and
                        my books, see
   25 00000000         ;http://users.ece.utexas.edu/~valvano/
   26 00000000         
   27 00000000         ; U0Rx (VCP receive) connected to PA0
   28 00000000         ; U0Tx (VCP transmit) connected to PA1
   29 00000000         
   30 00000000         ; standard ASCII symbols
   31 00000000 0000000D 
                       CR      EQU              0x0D        ;/r
   32 00000000 0000000A 
                       LF      EQU              0x0A        ;/n
   33 00000000 00000008 
                       BS      EQU              0x08        ;backspace
   34 00000000 0000001B 
                       ESC     EQU              0x1B        ;escape
   35 00000000 00000020 
                       SPA     EQU              0x20        ;space
   36 00000000 0000007F 
                       DEL     EQU              0x7F        ;delete
   37 00000000         
   38 00000000         ; functions in PLL.s
   39 00000000                 IMPORT           PLL_Init    ;import label PLL_I
                                                            nit but EXPORT must
                                                             be declared in PLL



ARM Macro Assembler    Page 2 


                                                            .s file
   40 00000000         
   41 00000000         ; functions UART.s
   42 00000000                 IMPORT           UART_Init
   43 00000000                 IMPORT           UART_InChar
   44 00000000                 IMPORT           UART_OutChar
   45 00000000         ;functions in portFConfiguration.s
   46 00000000                 IMPORT           GPIOF_Init
   47 00000000                 IMPORT           RED_LED_ON
   48 00000000                 IMPORT           CHECK_SW2
   49 00000000         ;new import sw1
   50 00000000                 IMPORT           CHECK_SW1
   51 00000000         ;new import BLUE_LED
   52 00000000                 IMPORT           BLUE_LED_ON
   53 00000000         ;new import GREEN_LED
   54 00000000                 IMPORT           GREEN_LED_ON
   55 00000000         ;new import LEDs_OFF
   56 00000000                 IMPORT           LEDs_OFF
   57 00000000         
   58 00000000         
   59 00000000                 AREA             DATA, ALIGN=2
   60 00000000         
   61 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   62 00000000                 THUMB
   63 00000000                 EXPORT           Start
   64 00000000         
   65 00000000                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
   66 00000000         
   67 00000000         ;---------------------OutCRLF---------------------
   68 00000000         ; Output a CR,LF to UART to go to a new line
   69 00000000         ; Input: none
   70 00000000         ; Output: none
   71 00000000         OutCRLF                              ;perform /r/n
   72 00000000 B500            PUSH             {LR}        ; save current valu
                                                            e of LR
   73 00000002 F04F 000D       MOV              R0, #CR     ; R0 = CR (<carriag
                                                            e return>);/r
   74 00000006 F7FF FFFE       BL               UART_OutChar ; send <carriage r
                                                            eturn> to the UART`
                                                            
   75 0000000A F04F 000A       MOV              R0, #LF     ; R0 = LF (<line fe
                                                            ed>)/n
   76 0000000E F7FF FFFE       BL               UART_OutChar ; send <line feed>
                                                             to the UART
   77 00000012 BD00            POP              {PC}        ; restore previous 
                                                            value of LR into PC
                                                             (return)
   78 00000014         
   79 00000014         Start
   80 00000014 F7FF FFFE       BL               PLL_Init    ; set system clock 
                                                            to 50 MHz
   81 00000018 F7FF FFFE       BL               UART_Init   ; initialize UART
   82 0000001C F7FF FFFE       BL               GPIOF_Init
   83 00000020 F7FF FFEE       BL               OutCRLF     ; go to a new line
   84 00000024         
   85 00000024         ;-------------------------------------------------------



ARM Macro Assembler    Page 3 


                       ----------------------
   86 00000024         ; @version 8 july 2017
   87 00000024         ; @author Alexey Titov & Shir Bentabou
   88 00000024         ; @ID Shir:302895529     Alexey:334063021
   89 00000024         ;-------------------------------------------------------
                       ---------------------- 
   90 00000024         
   91 00000024         loop
   92 00000024         ;-------------------------------------------------------
                       -----------------------
   93 00000024 F7FF FFFE       BL               UART_InChar
   94 00000028 2854            CMP              R0,#0x54
   95 0000002A D1FB            BNE              loop
   96 0000002C         ;--------------------------------------SW1+SW2----------
                       -----------------------
   97 0000002C         positions
   98 0000002C F7FF FFFE       BL               CHECK_SW1
   99 00000030 2E00            CMP              R6,#0x00
  100 00000032 D115            BNE              position3
  101 00000034 F7FF FFFE       BL               CHECK_SW2
  102 00000038 2D00            CMP              R5,#0x00
  103 0000003A D108            BNE              position2
  104 0000003C F04F 0004       MOV              R0, #4      ; R0 = 4
  105 00000040         ;Do reg-arg if 0 then set zero-flag to 1 else to 0
  106 00000040 F7FF FFFE       BL               UART_OutChar ; echo the charact
                                                            er back to the UART
                                                            
  107 00000044 F7FF FFDC       BL               OutCRLF     ; echo the characte
                                                            r back to the UART
  108 00000048 F7FF FFFE       BL               RED_LED_ON
  109 0000004C         
  110 0000004C E01E            B                delay
  111 0000004E         ;-----------------------------------------SW1-----------
                       -------------------------
  112 0000004E         position2
  113 0000004E F04F 0002       MOV              R0, #2      ; R0 = 2
  114 00000052 F7FF FFFE       BL               UART_OutChar ; echo the charact
                                                            er back to the UART
                                                            
  115 00000056 F7FF FFD3       BL               OutCRLF     ; echo the characte
                                                            r back to the UART
  116 0000005A F7FF FFFE       BL               BLUE_LED_ON
  117 0000005E         
  118 0000005E E015            B                delay
  119 00000060         ;-----------------------------------------SW2-----------
                       -------------------------
  120 00000060         position3
  121 00000060 F04F 0003       MOV              R0, #3      ; R0 = 3
  122 00000064 F7FF FFFE       BL               CHECK_SW2
  123 00000068 2D00            CMP              R5,#0x00
  124 0000006A D106            BNE              position1
  125 0000006C F7FF FFFE       BL               UART_OutChar ; echo the charact
                                                            er back to the UART
                                                            
  126 00000070 F7FF FFC6       BL               OutCRLF     ; echo the characte
                                                            r back to the UART
  127 00000074 F7FF FFFE       BL               GREEN_LED_ON
  128 00000078         
  129 00000078 E008            B                delay



ARM Macro Assembler    Page 4 


  130 0000007A         ;--------------------------------------NO SW1+SW2-------
                       -------------------------
  131 0000007A         position1
  132 0000007A F04F 0001       MOV              R0, #1      ; R0 = 1
  133 0000007E F7FF FFFE       BL               UART_OutChar ; echo the charact
                                                            er back to the UART
                                                            
  134 00000082 F7FF FFBD       BL               OutCRLF     ; echo the characte
                                                            r back to the UART
  135 00000086 F7FF FFFE       BL               LEDs_OFF
  136 0000008A         
  137 0000008A E7FF            B                delay
  138 0000008C         ;-------------------------------------delay-------------
                       ------------------------
  139 0000008C         delay
  140 0000008C F04F 0310       MOV              R3,#16
  141 00000090         ;for(R3=16;R3>0;R3--)
  142 00000090         for1
  143 00000090 F04F 04FE       MOV              R4,#254
  144 00000094         ;for(R4=254;R4>0;R4--)
  145 00000094         for2
  146 00000094 F04F 05FE       MOV              R5,#254
  147 00000098         ;for(R5=254;R5>0;R5--)
  148 00000098         for3
  149 00000098 F1A5 0501       SUB              R5,R5,#1    ;R5--
  150 0000009C 2D00            CMP              R5,#0x00
  151 0000009E D1FB            BNE              for3
  152 000000A0         
  153 000000A0 F1A4 0401       SUB              R4,R4,#1    ;R4--
  154 000000A4 2C00            CMP              R4,#0x00
  155 000000A6 D1F5            BNE              for2
  156 000000A8         
  157 000000A8 F1A3 0301       SUB              R3,R3,#1    ;R3--
  158 000000AC 2B00            CMP              R3,#0x00
  159 000000AE D1EF            BNE              for1
  160 000000B0         
  161 000000B0 E7B8            B                loop
  162 000000B2         
  163 000000B2 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  164 000000B4                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\Games\A
RM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Games\ARM\PACK\ARM\CMSIS\5.0.1\Devic
e\ARM\ARMCM4\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION
 SETA 523" --predefine="_RTE_ SETA 1" --predefine="ARMCM4 SETA 1" --list=.\list
ings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 59 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 61 in file main.s
   Uses
      None
Comment: .text unused
OutCRLF 00000000

Symbol: OutCRLF
   Definitions
      At line 71 in file main.s
   Uses
      At line 83 in file main.s
      At line 107 in file main.s
      At line 115 in file main.s
      At line 126 in file main.s
      At line 134 in file main.s

Start 00000014

Symbol: Start
   Definitions
      At line 79 in file main.s
   Uses
      At line 63 in file main.s
Comment: Start used once
delay 0000008C

Symbol: delay
   Definitions
      At line 139 in file main.s
   Uses
      At line 110 in file main.s
      At line 118 in file main.s
      At line 129 in file main.s
      At line 137 in file main.s

for1 00000090

Symbol: for1
   Definitions
      At line 142 in file main.s
   Uses
      At line 159 in file main.s
Comment: for1 used once
for2 00000094

Symbol: for2
   Definitions
      At line 145 in file main.s
   Uses
      At line 155 in file main.s
Comment: for2 used once
for3 00000098

Symbol: for3
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 148 in file main.s
   Uses
      At line 151 in file main.s
Comment: for3 used once
loop 00000024

Symbol: loop
   Definitions
      At line 91 in file main.s
   Uses
      At line 95 in file main.s
      At line 161 in file main.s

position1 0000007A

Symbol: position1
   Definitions
      At line 131 in file main.s
   Uses
      At line 124 in file main.s
Comment: position1 used once
position2 0000004E

Symbol: position2
   Definitions
      At line 112 in file main.s
   Uses
      At line 103 in file main.s
Comment: position2 used once
position3 00000060

Symbol: position3
   Definitions
      At line 120 in file main.s
   Uses
      At line 100 in file main.s
Comment: position3 used once
positions 0000002C

Symbol: positions
   Definitions
      At line 97 in file main.s
   Uses
      None
Comment: positions unused
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BS 00000008

Symbol: BS
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: BS unused
CR 0000000D

Symbol: CR
   Definitions
      At line 31 in file main.s
   Uses
      At line 73 in file main.s
Comment: CR used once
DEL 0000007F

Symbol: DEL
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: DEL unused
ESC 0000001B

Symbol: ESC
   Definitions
      At line 34 in file main.s
   Uses
      None
Comment: ESC unused
LF 0000000A

Symbol: LF
   Definitions
      At line 32 in file main.s
   Uses
      At line 75 in file main.s
Comment: LF used once
SPA 00000020

Symbol: SPA
   Definitions
      At line 35 in file main.s
   Uses
      None
Comment: SPA unused
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

BLUE_LED_ON 00000000

Symbol: BLUE_LED_ON
   Definitions
      At line 52 in file main.s
   Uses
      At line 116 in file main.s
Comment: BLUE_LED_ON used once
CHECK_SW1 00000000

Symbol: CHECK_SW1
   Definitions
      At line 50 in file main.s
   Uses
      At line 98 in file main.s
Comment: CHECK_SW1 used once
CHECK_SW2 00000000

Symbol: CHECK_SW2
   Definitions
      At line 48 in file main.s
   Uses
      At line 101 in file main.s
      At line 122 in file main.s

GPIOF_Init 00000000

Symbol: GPIOF_Init
   Definitions
      At line 46 in file main.s
   Uses
      At line 82 in file main.s
Comment: GPIOF_Init used once
GREEN_LED_ON 00000000

Symbol: GREEN_LED_ON
   Definitions
      At line 54 in file main.s
   Uses
      At line 127 in file main.s
Comment: GREEN_LED_ON used once
LEDs_OFF 00000000

Symbol: LEDs_OFF
   Definitions
      At line 56 in file main.s
   Uses
      At line 135 in file main.s
Comment: LEDs_OFF used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 39 in file main.s
   Uses
      At line 80 in file main.s
Comment: PLL_Init used once
RED_LED_ON 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: RED_LED_ON
   Definitions
      At line 47 in file main.s
   Uses
      At line 108 in file main.s
Comment: RED_LED_ON used once
UART_InChar 00000000

Symbol: UART_InChar
   Definitions
      At line 43 in file main.s
   Uses
      At line 93 in file main.s
Comment: UART_InChar used once
UART_Init 00000000

Symbol: UART_Init
   Definitions
      At line 42 in file main.s
   Uses
      At line 81 in file main.s
Comment: UART_Init used once
UART_OutChar 00000000

Symbol: UART_OutChar
   Definitions
      At line 44 in file main.s
   Uses
      At line 74 in file main.s
      At line 76 in file main.s
      At line 106 in file main.s
      At line 114 in file main.s
      At line 125 in file main.s
      At line 133 in file main.s

11 symbols
364 symbols in table
